{"version":3,"sources":["ng://@fortawesome/angular-fontawesome/shared/utils/is-icon-lookup.util.ts","ng://@fortawesome/angular-fontawesome/shared/utils/normalize-icon-spec.util.ts","ng://@fortawesome/angular-fontawesome/shared/utils/object-with-keys.util.ts","ng://@fortawesome/angular-fontawesome/shared/utils/classlist.util.ts","ng://@fortawesome/angular-fontawesome/shared/errors/not-found-icon-html.ts","ng://@fortawesome/angular-fontawesome/icon/icon.component.ts","ng://@fortawesome/angular-fontawesome/shared/errors/warn-if-icon-spec-missing.ts","ng://@fortawesome/angular-fontawesome/shared/errors/warn-if-icon-html-missing.ts","ng://@fortawesome/angular-fontawesome/layers/layers.component.ts","ng://@fortawesome/angular-fontawesome/layers/layers-text-base.component.ts","ng://@fortawesome/angular-fontawesome/shared/errors/warn-if-parent-not-exist.ts","ng://@fortawesome/angular-fontawesome/layers/layers-text.component.ts","ng://@fortawesome/angular-fontawesome/layers/layers-counter.component.ts","ng://@fortawesome/angular-fontawesome/fontawesome.module.ts"],"names":["faNormalizeIconSpec","iconSpec","i","prefix","undefined","iconName","Array","isArray","length","objectWithKey","key","value","_a","faClassList","props","classes","fa-spin","spin","fa-pulse","pulse","fa-fw","fixedWidth","fa-border","border","fa-li","listItem","fa-inverse","inverse","fa-layers-counter","counter","fa-flip-horizontal","flip","fa-flip-vertical","size","rotate","pull","Object","keys","map","filter","faNotFoundIconHtml","config","replacementClass","FaIconComponent","sanitizer","this","prototype","ngOnChanges","changes","updateIconSpec","updateParams","updateIcon","renderIcon","iconProp","classOpts","tslib_1","__spread","mask","parsedTransform","transform","parse","params","__assign","title","styles","symbol","icon","iconObj","console","error","renderedIconHTML","bypassSecurityTrustHtml","html","join","Component","args","selector","template","host","class","DomSanitizer","HostBinding","Input","FaLayersTextBaseComponent","parent","parentName","childName","constructor","name","updateContent","renderedHTML","renderFontawesomeObject","content","Injectable","FaLayersComponent","decorators","type","Inject","forwardRef","Optional","tslib_1.__extends","FaLayersTextComponent","text","FaLayersCounterComponent","FontAwesomeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6lBAMO,ICEMA,EAAsB,SAACC,GAClC,IDH2BC,ECK3B,OAAI,MAAOD,EACF,MDNkBC,ECSVD,GDRME,SAAWC,WAAa,EAAgBC,WAAaD,UCSnEH,EAGLK,MAAMC,QAAQN,IAAkD,IAArC,EAA0BO,OAChD,CAAEL,OAAQF,EAAS,GAAII,SAAUJ,EAAS,IAG3B,iBAAbA,EACF,CAAEE,OAfW,MAeYE,SAAUJ,QAD5C,GCpBWQ,EAAgB,SAAIC,EAAaC,GAC5C,OAAQL,MAAMC,QAAQI,IAAyB,EAAfA,EAAMH,SAAiBF,MAAMC,QAAQI,IAAUA,IAAMC,EAAA,IAAMF,GAAMC,EAAKC,GAAK,UCGhGC,EAAc,SAACC,GAC1B,MAAMC,IAAOH,EAAA,CACXI,UAAWF,EAAMG,KACjBC,WAAYJ,EAAMK,MAClBC,QAASN,EAAMO,WACfC,YAAaR,EAAMS,OACnBC,QAASV,EAAMW,SACfC,aAAcZ,EAAMa,QACpBC,oBAAqBd,EAAMe,QAC3BC,qBAAqC,eAAfhB,EAAMiB,MAAwC,SAAfjB,EAAMiB,KAC3DC,mBAAmC,aAAflB,EAAMiB,MAAsC,SAAfjB,EAAMiB,OACtD,MAAMjB,EAAMmB,MAAwB,OAAfnB,EAAMmB,KAC5BrB,EAAC,aAAaE,EAAMoB,QAA4B,OAAjBpB,EAAMoB,OACrCtB,EAAC,WAAWE,EAAMqB,MAAwB,OAAfrB,EAAMqB,QAGnC,OAAOC,OAAOC,KAAKtB,GAChBuB,IAAI,SAAA5B,GAAO,OAACK,EAAQL,GAAOA,EAAM,OACjC6B,OAAO,SAAA7B,GAAO,OAAAA,KCvBN8B,EAAqB,eAAeC,EAAAA,OAAOC,iBAAgB,yEC8CtE,SAAAC,EAAoBC,GAAAC,KAAAD,UAAAA,eAqBkB,UAGtCD,EAAAG,UAAAC,YAAA,SAAYC,GACNA,IACFH,KAAKI,iBACLJ,KAAKK,eACLL,KAAKM,aACLN,KAAKO,eAODT,EAAAG,UAAAG,0BACNJ,KAAK5C,SAAWD,EAAoB6C,KAAKQ,WAMnCV,EAAAG,UAAAI,wBACN,IAAMI,EAAqB,CACzBvB,KAAMc,KAAKd,KACXd,KAAM4B,KAAK5B,KACXE,MAAO0B,KAAK1B,MACZI,OAAQsB,KAAKtB,OACbI,QAASkB,KAAKlB,QACdF,SAAUoB,KAAKpB,SACfQ,KAAMY,KAAKZ,MAAQ,KACnBE,KAAMU,KAAKV,MAAQ,KACnBD,OAAQW,KAAKX,QAAU,KACvBb,WAAYwB,KAAKxB,YAGbN,EAAUN,EAAc,UAAS8C,EAAAC,SAAM3C,EAAYyC,GAAeT,KAAK9B,UACvE0C,EAAOhD,EAAc,OAAQT,EAAoB6C,KAAKY,OACtDC,EAA4C,iBAAnBb,KAAKc,UAAyBC,EAAAA,MAAMD,UAAUd,KAAKc,WAAad,KAAKc,UAC9FA,EAAYlD,EAAc,YAAaiD,GAE7Cb,KAAKgB,OAAMN,EAAAO,SAAA,CACTC,MAAOlB,KAAKkB,OACTJ,EACA5C,EACA0C,EAAI,CACPO,OAAQnB,KAAKmB,OACbC,OAAQpB,KAAKoB,UAOTtB,EAAAG,UAAAK,sBACNN,KAAKqB,KAAOA,EAAAA,KAAKrB,KAAK5C,SAAU4C,KAAKgB,SAM/BlB,EAAAG,UAAAM,sBChI6B,ICACe,EAAelE,EFiI3B4C,KAAK5C,UC/H7BmE,QAAQC,MAAM,sHCFsBF,EFkIZtB,KAAKqB,MElIsBjE,EFkIhB4C,KAAK5C,YEjIzBkE,GACfC,QAAQC,MAAM,kDAAkDpE,EAASI,SAAQ,eAAeJ,EAASE,QFkIzG0C,KAAKyB,iBAAmBzB,KAAKD,UAAU2B,wBACrC1B,KAAKqB,KAAOrB,KAAKqB,KAAKM,KAAKC,KAAK,MAAQjC,wBApG7CkC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAU,GACVC,KAAM,CACJC,QAAO,2DAjBFC,EAAAA,0DAuBNC,EAAAA,YAAWN,KAAA,CAAC,+BASZO,EAAAA,MAAKP,KAAA,CAAC,uBACNO,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,oEGjEFR,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAU,gFACVC,KAAM,CACJC,QAAO,yECiBT,SAAAI,EAA6EC,EACnExC,GCxB0B,IAACwC,EAAaC,EAAoBC,EDuBOzC,KAAAuC,OAAAA,EACnEvC,KAAAD,UAAAA,eAU8B,GClCHwC,ED0BZvC,KAAKuC,OC1BoBC,ED0BZ,oBC1BgCC,ED0BXzC,KAAK0C,YAAYC,KCzBvEJ,GACHhB,QAAQC,MAAM,gBAAgBiB,EAAS,+BAA+BD,EAAU,iBDkClFF,EAAArC,UAAAC,YAAA,SAAYC,GACNA,IACFH,KAAKK,eACLL,KAAK4C,kBAiBDN,EAAArC,UAAA2C,yBACN5C,KAAK6C,aAAe7C,KAAKD,UAAU2B,wBACjC1B,KAAK8C,wBAAwB9C,KAAK+C,SAAW,GAAI/C,KAAKgB,QAAQW,KAAKC,KAAK,4BAzC7EoB,EAAAA,sDAHQC,EAAiBC,WAAA,CAAA,CAAAC,KASXC,EAAAA,OAAMtB,KAAA,CAACuB,EAAAA,WAAW,WAAM,OAAAJ,MAAkB,CAAAE,KAAGG,EAAAA,kBAXnDnB,EAAAA,sDAQNC,EAAAA,YAAWN,KAAA,CAAC,8BAWZO,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,+FELwCkB,EAAAA,UAAAA,EAAAA,GAiB/BC,EAAAvD,UAAAI,aAAV,WACE,IAAMI,EAAqB,CACzBvB,KAAMc,KAAKd,KACXd,KAAM4B,KAAK5B,KACXE,MAAO0B,KAAK1B,MACZI,OAAQsB,KAAKtB,OACbI,QAASkB,KAAKlB,QACdF,SAAUoB,KAAKpB,SACfQ,KAAMY,KAAKZ,MAAQ,KACnBE,KAAMU,KAAKV,MAAQ,KACnBD,OAAQW,KAAKX,QAAU,KACvBb,WAAYwB,KAAKxB,YAGbN,EAAUN,EAAc,UAAS8C,EAAAC,SAAM3C,EAAYyC,GAAeT,KAAK9B,UACvE2C,EAA4C,iBAAnBb,KAAKc,UAAyBC,EAAAA,MAAMD,UAAUd,KAAKc,WAAad,KAAKc,UAC9FA,EAAYlD,EAAc,YAAaiD,GAE7Cb,KAAKgB,OAAMN,EAAAO,SAAA,GACNH,EACA5C,EAAO,CACVgD,MAAOlB,KAAKkB,MACZC,OAAQnB,KAAKmB,UAIPqC,EAAAvD,UAAA6C,wBAAV,SAAkCC,EAAiB/B,GACjD,OAAOyC,EAAAA,KAAKV,EAAS/B,wBAnDxBa,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,GACVC,KAAM,CACJC,QAAO,6FAKRG,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,yBACAA,EAAAA,YAZwCC,oFCXGiB,EAAAA,UAAAA,EAAAA,GAKlCG,EAAAzD,UAAAI,aAAV,WACEL,KAAKgB,OAAS,CACZE,MAAOlB,KAAKkB,MACZhD,QAAS8B,KAAK9B,QACdiD,OAAQnB,KAAKmB,SAIPuC,EAAAzD,UAAA6C,wBAAV,SAAkCC,EAA0B/B,GAC1D,OAAOhC,EAAAA,QAAQ+D,EAAS/B,wBArB3Ba,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,GACVC,KAAM,CACJC,QAAO,qEAGmCI,GCrB9CqB,EAAA,oDAQCC,EAAAA,SAAQ9B,KAAA,CAAC,CACR+B,QAAS,CAACC,EAAAA,cACVC,aAAc,CACZjE,EACAmD,EACAO,EACAE,GAEFM,QAAS,CACPlE,EACAmD,EACAO,EACAE,+CApBJ","sourcesContent":["import {IconLookup, IconProp} from '@fortawesome/fontawesome-svg-core';\n\n/**\n * Returns if is IconLookup or not.\n * @returns IconLookup\n */\nexport const isIconLookup = (i: IconProp): i is IconLookup => {\n  return (<IconLookup>i).prefix !== undefined && (<IconLookup>i).iconName !== undefined;\n};\n","import { IconLookup, IconProp } from '@fortawesome/fontawesome-svg-core';\n\nimport { isIconLookup } from './is-icon-lookup.util';\n\n/**\n * Normalizing icon spec.\n * @returns IconLookup\n */\nexport const faNormalizeIconSpec = (iconSpec: IconProp): IconLookup => {\n  const defaultPrefix = 'fas';\n\n  if (typeof iconSpec === 'undefined' || iconSpec === null) {\n    return null;\n  }\n\n  if (isIconLookup(iconSpec)) {\n    return iconSpec;\n  }\n\n  if (Array.isArray(iconSpec) && (<Array<string>>iconSpec).length === 2) {\n    return { prefix: iconSpec[0], iconName: iconSpec[1] };\n  }\n\n  if (typeof iconSpec === 'string') {\n    return { prefix: defaultPrefix, iconName: iconSpec };\n  }\n};\n","/**\n * @param T value\n */\nexport const objectWithKey = <T>(key: string, value: T): {[id: string]: T} => {\n  return (Array.isArray(value) && value.length > 0) || (!Array.isArray(value) && value) ? { [key]: value } : {};\n};\n","import { FaProps } from '../models/props.model';\n\n/**\n * Fontawesome class list.\n * Returns classes array by props.\n * @returns string[]\n */\nexport const faClassList = (props: FaProps): string[] => {\n  const classes = {\n    'fa-spin': props.spin,\n    'fa-pulse': props.pulse,\n    'fa-fw': props.fixedWidth,\n    'fa-border': props.border,\n    'fa-li': props.listItem,\n    'fa-inverse': props.inverse,\n    'fa-layers-counter': props.counter,\n    'fa-flip-horizontal': props.flip === 'horizontal' || props.flip === 'both',\n    'fa-flip-vertical': props.flip === 'vertical' || props.flip === 'both',\n    [`fa-${props.size}`]: props.size !== null,\n    [`fa-rotate-${props.rotate}`]: props.rotate !== null,\n    [`fa-pull-${props.pull}`]: props.pull !== null\n  };\n\n  return Object.keys(classes)\n    .map(key => (classes[key] ? key : null))\n    .filter(key => key);\n};\n","import { config } from '@fortawesome/fontawesome-svg-core';\n\nexport const faNotFoundIconHtml = `<svg class=\"${config.replacementClass}\" viewBox=\"0 0 448 512\"></svg><!--icon not found-->`;\n","import {\n  Input,\n  OnChanges,\n  Component,\n  HostBinding,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  icon,\n  Icon,\n  parse,\n  Styles,\n  PullProp,\n  IconProp,\n  SizeProp,\n  FlipProp,\n  FaSymbol,\n  Transform,\n  IconParams,\n  IconLookup,\n  RotateProp\n} from '@fortawesome/fontawesome-svg-core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { faNormalizeIconSpec } from '../shared/utils/normalize-icon-spec.util';\nimport { FaProps } from '../shared/models/props.model';\nimport { objectWithKey } from '../shared/utils/object-with-keys.util';\nimport { faClassList } from '../shared/utils/classlist.util';\nimport { faWarnIfIconHtmlMissing } from '../shared/errors/warn-if-icon-html-missing';\nimport { faWarnIfIconSpecMissing } from '../shared/errors/warn-if-icon-spec-missing';\nimport { faNotFoundIconHtml } from '../shared/errors/not-found-icon-html';\n\n/**\n * Fontawesome icon.\n */\n@Component({\n  selector: 'fa-icon',\n  template: ``,\n  host: {\n    class: 'ng-fa-icon',\n  }\n})\nexport class FaIconComponent implements OnChanges {\n  public icon: Icon;\n\n  @HostBinding('innerHTML')\n  public renderedIconHTML: SafeHtml;\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  private params: IconParams;\n  private iconSpec: IconLookup;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('icon') private iconProp: IconProp;\n  @Input() private title?: string;\n  @Input() private spin?: boolean;\n  @Input() private pulse?: boolean;\n  @Input() private mask?: IconProp;\n  @Input() private styles?: Styles;\n  @Input() private flip?: FlipProp;\n  @Input() private size?: SizeProp;\n  @Input() private pull?: PullProp;\n  @Input() private border?: boolean;\n  @Input() private inverse?: boolean;\n  @Input() private symbol?: FaSymbol;\n  @Input() private listItem?: boolean;\n  @Input() private rotate?: RotateProp;\n  @Input() private fixedWidth?: boolean;\n  @Input() private classes?: string[] = [];\n  @Input() private transform?: string | Transform;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      this.updateIconSpec();\n      this.updateParams();\n      this.updateIcon();\n      this.renderIcon();\n    }\n  }\n\n  /**\n   * Updating icon spec.\n   */\n  private updateIconSpec() {\n    this.iconSpec = faNormalizeIconSpec(this.iconProp);\n  }\n\n  /**\n   * Updating params by component props.\n   */\n  private updateParams() {\n    const classOpts: FaProps = {\n      flip: this.flip,\n      spin: this.spin,\n      pulse: this.pulse,\n      border: this.border,\n      inverse: this.inverse,\n      listItem: this.listItem,\n      size: this.size || null,\n      pull: this.pull || null,\n      rotate: this.rotate || null,\n      fixedWidth: this.fixedWidth\n    };\n\n    const classes = objectWithKey('classes', [...faClassList(classOpts), ...this.classes]);\n    const mask = objectWithKey('mask', faNormalizeIconSpec(this.mask));\n    const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n    const transform = objectWithKey('transform', parsedTransform);\n\n    this.params = {\n      title: this.title,\n      ...transform,\n      ...classes,\n      ...mask,\n      styles: this.styles,\n      symbol: this.symbol\n    };\n  }\n\n  /**\n   * Updating icon by params and icon spec.\n   */\n  private updateIcon() {\n    this.icon = icon(this.iconSpec, this.params);\n  }\n\n  /**\n   * Rendering icon.\n   */\n  private renderIcon() {\n    faWarnIfIconSpecMissing(this.iconSpec);\n    faWarnIfIconHtmlMissing(this.icon, this.iconSpec);\n\n    this.renderedIconHTML = this.sanitizer.bypassSecurityTrustHtml(\n      this.icon ? this.icon.html.join('\\n') : faNotFoundIconHtml\n    );\n  }\n}\n\n","import { IconLookup } from '@fortawesome/fontawesome-svg-core';\n\nexport const faWarnIfIconSpecMissing = (iconSpec: IconLookup) => {\n  if (!iconSpec) {\n    console.error('FontAwesome: Could not find icon. ' +\n      `It looks like you've provided a null or undefined icon object to this component.`);\n  }\n};\n","import { Icon, IconLookup } from '@fortawesome/fontawesome-svg-core';\n\nexport const faWarnIfIconHtmlMissing = (iconObj: Icon, iconSpec: IconLookup) => {\n  if (iconSpec && !iconObj) {\n    console.error(`FontAwesome: Could not find icon with iconName=${iconSpec.iconName} and prefix=${iconSpec.prefix}`);\n  }\n};\n","import { Component } from '@angular/core';\n\n/**\n * Fontawesome layers.\n */\n@Component({\n  selector: 'fa-layers',\n  template: `<ng-content select=\"fa-icon, fa-layers-text, fa-layers-counter\"></ng-content>`,\n  host: {\n    class: 'fa-layers'\n  }\n})\nexport class FaLayersComponent {\n}\n\n","import {\n  Input,\n  Inject,\n  Injectable,\n  Optional,\n  OnChanges,\n  forwardRef,\n  HostBinding,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  Styles,\n  FontawesomeObject,\n  TextParams\n} from '@fortawesome/fontawesome-svg-core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { FaLayersComponent } from './layers.component';\nimport { faWarnIfParentNotExist } from '../shared/errors/warn-if-parent-not-exist';\n\n@Injectable()\nexport abstract class FaLayersTextBaseComponent implements OnChanges {\n\n  @HostBinding('innerHTML')\n  public renderedHTML: SafeHtml;\n\n  constructor(@Inject(forwardRef(() => FaLayersComponent)) @Optional() private parent: FaLayersComponent,\n    private sanitizer: DomSanitizer) {\n\n    faWarnIfParentNotExist(this.parent, 'FaLayersComponent', this.constructor.name);\n  }\n\n  protected params: TextParams;\n\n  @Input() protected content: string;\n  @Input() protected title?: string;\n  @Input() protected styles?: Styles;\n  @Input() protected classes?: string[] = [];\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      this.updateParams();\n      this.updateContent();\n    }\n  }\n\n  /**\n   * Updating params by component props.\n   */\n  protected abstract updateParams(): void;\n\n  /**\n   * Render the FontawesomeObject using the content and params.\n   */\n  protected abstract renderFontawesomeObject(content: string | number, params?: TextParams): FontawesomeObject;\n\n  /**\n   * Updating content by params and content.\n   */\n  private updateContent() {\n    this.renderedHTML = this.sanitizer.bypassSecurityTrustHtml(\n      this.renderFontawesomeObject(this.content || '', this.params).html.join('\\n')\n    );\n  }\n}\n\n","/**\n * Warns if parent component not existing.\n */\nexport const faWarnIfParentNotExist = (parent: any, parentName: string, childName: string) => {\n  if (!parent) {\n    console.error(`FontAwesome: ${childName} should be used as child of ${parentName} only.`);\n  }\n};\n","import {\n  Input,\n  Component,\n  HostBinding\n} from '@angular/core';\nimport {\n  text,\n  parse,\n  Text,\n  TextParams,\n  SizeProp,\n  FlipProp,\n  PullProp,\n  Transform,\n  RotateProp\n} from '@fortawesome/fontawesome-svg-core';\nimport { FaLayersTextBaseComponent } from './layers-text-base.component';\n\nimport { FaProps } from '../shared/models/props.model';\nimport { objectWithKey } from '../shared/utils/object-with-keys.util';\nimport { faClassList } from '../shared/utils/classlist.util';\n\n/**\n * Fontawesome layers text.\n */\n@Component({\n  selector: 'fa-layers-text',\n  template: '',\n  host: {\n    class: 'ng-fa-layers-text'\n  }\n})\nexport class FaLayersTextComponent extends FaLayersTextBaseComponent {\n\n  @Input() private spin?: boolean;\n  @Input() private pulse?: boolean;\n  @Input() private flip?: FlipProp;\n  @Input() private size?: SizeProp;\n  @Input() private pull?: PullProp;\n  @Input() private border?: boolean;\n  @Input() private inverse?: boolean;\n  @Input() private listItem?: boolean;\n  @Input() private rotate?: RotateProp;\n  @Input() private fixedWidth?: boolean;\n  @Input() private transform?: string | Transform;\n\n  /**\n   * Updating params by component props.\n   */\n  protected updateParams() {\n    const classOpts: FaProps = {\n      flip: this.flip,\n      spin: this.spin,\n      pulse: this.pulse,\n      border: this.border,\n      inverse: this.inverse,\n      listItem: this.listItem,\n      size: this.size || null,\n      pull: this.pull || null,\n      rotate: this.rotate || null,\n      fixedWidth: this.fixedWidth\n    };\n\n    const classes = objectWithKey('classes', [...faClassList(classOpts), ...this.classes]);\n    const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n    const transform = objectWithKey('transform', parsedTransform);\n\n    this.params = {\n      ...transform,\n      ...classes,\n      title: this.title,\n      styles: this.styles\n    };\n  }\n\n  protected renderFontawesomeObject(content: string, params?: TextParams) {\n    return text(content, params);\n  }\n}\n\n","import {\n  Component,\n  HostBinding\n} from '@angular/core';\nimport {\n  counter,\n  Counter,\n  CounterParams,\n} from '@fortawesome/fontawesome-svg-core';\nimport { FaLayersTextBaseComponent } from './layers-text-base.component';\n\n/**\n * Fontawesome layers counter.\n */\n@Component({\n  selector: 'fa-layers-counter',\n  template: '',\n  host: {\n    class: 'ng-fa-layers-counter'\n  }\n})\nexport class FaLayersCounterComponent extends FaLayersTextBaseComponent {\n\n  /**\n   * Updating params by component props.\n   */\n  protected updateParams() {\n    this.params = {\n      title: this.title,\n      classes: this.classes,\n      styles: this.styles,\n    };\n  }\n\n  protected renderFontawesomeObject(content: string | number, params?: CounterParams) {\n    return counter(content, params);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FaIconComponent } from './icon/icon.component';\nimport { FaLayersComponent } from './layers/layers.component';\nimport { FaLayersTextComponent } from './layers/layers-text.component';\nimport { FaLayersCounterComponent } from './layers/layers-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FaIconComponent,\n    FaLayersComponent,\n    FaLayersTextComponent,\n    FaLayersCounterComponent\n  ],\n  exports: [\n    FaIconComponent,\n    FaLayersComponent,\n    FaLayersTextComponent,\n    FaLayersCounterComponent\n  ],\n})\nexport class FontAwesomeModule {\n}\n"]}