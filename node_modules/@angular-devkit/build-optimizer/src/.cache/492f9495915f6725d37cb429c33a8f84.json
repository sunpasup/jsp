{"remainingRequest":"/Users/sunpasup/Documents/JSP/material-dashboard-angular-v2.1.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/sunpasup/Documents/JSP/material-dashboard-angular-v2.1.0/node_modules/@ngx-share/button/fesm5/ngx-share-button.js","dependencies":[{"path":"/Users/sunpasup/Documents/JSP/material-dashboard-angular-v2.1.0/node_modules/@ngx-share/button/fesm5/ngx-share-button.js","mtime":499162500000},{"path":"/Users/sunpasup/Documents/JSP/material-dashboard-angular-v2.1.0/node_modules/cache-loader/dist/cjs.js","mtime":1530135103530},{"path":"/Users/sunpasup/Documents/JSP/material-dashboard-angular-v2.1.0/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { ShareButtons, ShareButtonDirective, ShareModule, CONFIG } from '@ngx-share/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShareButtonComponent = /*@__PURE__*/ (function () {\n    function ShareButtonComponent(share) {\n        this.share = share;\n        /**\n         * Show button icon\n         */\n        this.showIcon = true;\n        /**\n         * Show button text\n         */\n        this.showText = false;\n        /**\n         * Button share count\n         */\n        this.showCount = false;\n        /**\n         * Button size\n         */\n        this.size = this.share.size;\n        /**\n         * Button theme\n         */\n        this.theme = this.share.theme;\n        /**\n         * Stream that emits when share count is fetched\n         */\n        this.count = new EventEmitter();\n        /**\n         * Stream that emits when share dialog is opened\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Stream that emits when share dialog is closed\n         */\n        this.closed = new EventEmitter();\n    }\n    Object.defineProperty(ShareButtonComponent.prototype, \"createButton\", {\n        set: /**\n         * @param {?} button\n         * @return {?}\n         */ function (button) {\n            this.shareCount = 0;\n            this.button = button;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShareButtonComponent.prototype, \"setUrl\", {\n        /** Share URL */\n        set: /**\n         * Share URL\n         * @param {?} url\n         * @return {?}\n         */ function (url) {\n            this.shareCount = 0;\n            this.url = url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShareButtonComponent.prototype, \"buttonClass\", {\n        /** Set theme as button class */\n        get: /**\n         * Set theme as button class\n         * @return {?}\n         */ function () {\n            return \"sb-button sb-\" + this.theme;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    ShareButtonComponent.prototype.onCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n        function (count) {\n            this.shareCount = count;\n            this.count.emit(count);\n        };\n    return ShareButtonComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction ShareButtonsFactory(config) {\n    return new ShareButtons(config);\n}\nvar ShareButtonModule = /*@__PURE__*/ (function () {\n    function ShareButtonModule() {\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    ShareButtonModule.forRoot = /**\n     * @param {?=} config\n     * @return {?}\n     */\n        function (config) {\n            return {\n                ngModule: ShareButtonModule,\n                providers: [\n                    { provide: CONFIG, useValue: config },\n                    {\n                        provide: ShareButtons,\n                        useFactory: ShareButtonsFactory,\n                        deps: [CONFIG]\n                    }\n                ]\n            };\n        };\n    return ShareButtonModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { ShareButtonsFactory, ShareButtonModule, ShareButtonComponent };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64, \n",null]}