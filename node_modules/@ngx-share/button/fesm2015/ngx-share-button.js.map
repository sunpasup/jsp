{"version":3,"file":"ngx-share-button.js.map","sources":["ng://@ngx-share/button/lib/share-button.component.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareButtons, ShareButtonDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  template: `<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        (count)=\"onCount($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonComponent {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button')\r\n  set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url')\r\n  set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareButtonDirective) ref: ShareButtonDirective;\r\n\r\n  constructor(private share: ShareButtons) {\r\n  }\r\n\r\n  onCount(count) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\n\r\nimport { ShareButtonComponent } from './share-button.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButtonComponent\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;IAwHE,YAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;;;;wBArCnB,IAAI;;;;wBAGJ,KAAK;;;;yBAGJ,KAAK;;;;oBASF,IAAI,CAAC,KAAK,CAAC,IAAI;;;;qBAGd,IAAI,CAAC,KAAK,CAAC,KAAK;;;;qBAGvB,IAAI,YAAY,EAAU;;;;sBAGzB,IAAI,YAAY,EAAU;;;;sBAG1B,IAAI,YAAY,EAAU;KAW5C;;;;;IA7DD,IACI,YAAY,CAAC,MAAc;QAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAGD,IACI,MAAM,CAAC,GAAW;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;;;;;IA0CD,IAA0B,WAAW;QACnC,OAAO,gBAAgB,IAAI,CAAC,KAAK,EAAE,CAAC;KACrC;;;;;IAQD,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;;YA3HF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwCX;gBACC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;aAC3B;;;;YA/CQ,YAAY;;;2BA2DlB,KAAK,SAAC,QAAQ;qBAOd,KAAK,SAAC,KAAK;oBAOX,KAAK;0BACL,KAAK;oBACL,KAAK;mBACL,KAAK;0BAGL,KAAK;uBAGL,KAAK;uBAGL,KAAK;wBAGL,KAAK;mBAGL,KAAK;mBAGL,KAAK;mBAGL,KAAK;oBAGL,KAAK;oBAGL,MAAM;qBAGN,MAAM;qBAGN,MAAM;0BAGN,WAAW,SAAC,OAAO;kBAKnB,SAAS,SAAC,oBAAoB;;;;;;;ACtHjC;;;;AAOA,6BAAoC,MAA0B;IAC5D,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;CACjC;AAiBD;;;;;IACE,OAAO,OAAO,CAAC,MAA2B;QACxC,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAC;gBACnC;oBACE,OAAO,EAAE,YAAY;oBACrB,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE,CAAC,MAAM,CAAC;iBACf;aACF;SACF,CAAC;KACH;;;YA5BF,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,WAAW;oBACX,iBAAiB;oBACjB,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,WAAW;oBACX,iBAAiB;oBACjB,oBAAoB;iBACrB;aACF;;;;;;;;;;;;;;;"}
