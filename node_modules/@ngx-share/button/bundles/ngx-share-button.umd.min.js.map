{"version":3,"sources":["ng://@ngx-share/button/lib/share-button.component.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"names":["ShareButtonComponent","share","this","size","theme","EventEmitter","Object","defineProperty","prototype","button","shareCount","url","onCount","count","emit","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","ShareButtons","Input","Output","HostBinding","ViewChild","ShareButtonDirective","ShareButtonsFactory","config","ShareButtonModule","forRoot","ngModule","providers","provide","CONFIG","useValue","useFactory","deps","NgModule","declarations","imports","ShareModule","FontAwesomeModule","CommonModule","exports"],"mappings":"wfAAA,IAAAA,EAAA,WAwHE,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,iBArCA,iBAGA,kBAGC,YASGC,KAAKD,MAAME,gBAGVD,KAAKD,MAAMG,iBAGlB,IAAIC,EAAAA,yBAGH,IAAIA,EAAAA,yBAGJ,IAAIA,EAAAA,oBAlDvBC,OAAAC,eACIP,EAAAQ,UAAA,eAAY,KADhB,SACiBC,GACfP,KAAKQ,WAAa,EAClBR,KAAKO,OAASA,mCAIhBH,OAAAC,eACIP,EAAAQ,UAAA,SAAM,KADV,SACWG,GACTT,KAAKQ,WAAa,EAClBR,KAAKS,IAAMA,mCA2CbL,OAAAC,eAA0BP,EAAAQ,UAAA,cAAW,KAArC,WACE,MAAO,gBAAgBN,KAAKE,uCAS9BJ,EAAAQ,UAAAI,QAAA,SAAQC,GACNX,KAAKQ,WAAaG,EAClBX,KAAKW,MAAMC,KAAKD,wBA1HnBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,+mCAyCVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,qBAAqB,+CA9CdC,EAAAA,sDA2DNC,EAAAA,MAAKR,KAAA,CAAC,0BAONQ,EAAAA,MAAKR,KAAA,CAAC,sBAONQ,EAAAA,2BACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,2BAGAA,EAAAA,wBAGAA,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,qBAGAA,EAAAA,qBAGAC,EAAAA,uBAGAA,EAAAA,uBAGAA,EAAAA,4BAGAC,EAAAA,YAAWV,KAAA,CAAC,sBAKZW,EAAAA,UAASX,KAAA,CAACY,EAAAA,2BAtHb,GCOA,SAAAC,EAAoCC,GAClC,OAAO,IAAIP,EAAAA,aAAaO,yCAmBjBC,EAAAC,QAAP,SAAeF,GACb,MAAO,CACLG,SAAUF,EACVG,UAAW,CACT,CAACC,QAASC,EAAAA,OAAQC,SAAUP,GAC5B,CACEK,QAASZ,EAAAA,aACTe,WAAYT,EACZU,KAAM,CAACH,EAAAA,gCAxBhBI,EAAAA,SAAQxB,KAAA,CAAC,CACRyB,aAAc,CACZzC,GAEF0C,QAAS,CACPC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,cAEFC,QAAS,CACPH,EAAAA,YACAC,EAAAA,kBACA5C","sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareButtons, ShareButtonDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  template: `<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [url]=\"url\"\r\n        [image]=\"image\"\r\n        [title]=\"title\"\r\n        [description]=\"description\"\r\n        [tags]=\"tags\"\r\n        [autoSetMeta]=\"autoSetMeta\"\r\n        [getCount]=\"showCount\"\r\n        (opened)=\"opened.emit($event)\"\r\n        (closed)=\"closed.emit($event)\"\r\n        (count)=\"onCount($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon && ref.prop\" class=\"sb-icon\">\r\n        <fa-icon [icon]=\"icon || ref.prop.icon\"></fa-icon>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText && ref.prop\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | shareCount }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonComponent {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button')\r\n  set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Share URL */\r\n  @Input('url')\r\n  set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this.share.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  /** Get button prop from ShareDirective */\r\n  @ViewChild(ShareButtonDirective) ref: ShareButtonDirective;\r\n\r\n  constructor(private share: ShareButtons) {\r\n  }\r\n\r\n  onCount(count) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\n\r\nimport { ShareButtonComponent } from './share-button.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButtonComponent\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}