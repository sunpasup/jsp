{"version":3,"sources":["null","ng://@ngx-share/buttons/lib/share-buttons.component.ts","ng://@ngx-share/buttons/lib/expand-button.component.ts","ng://@ngx-share/buttons/lib/share-buttons.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","ShareButtonsComponent","_share","this","BehaviorSubject","includedButtons","excludedButtons","userButtons","selectedButtons","expanded","shownCount","keys","config","prop","theme","EventEmitter","defineProperty","updateState","ngOnInit","_this","state$","_stateWorker$","pipe","map","state","filter","btn","indexOf","slice","moreIcon","lessIcon","_configSub$","config$","subscribe","options","include","exclude","moreButtonIcon","lessButtonIcon","ngOnDestroy","unsubscribe","complete","next","getValue","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","ShareButtons","Input","Output","ExpandButtonComponent","el","nativeElement","style","setProperty","ElementRef","ShareButtonsFactory","ShareButtonsModule","forRoot","ngModule","providers","provide","CONFIG","useValue","useFactory","deps","NgModule","declarations","imports","ShareButtonModule","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareButtons, ShareButtonsConfig } from '@ngx-share/core';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface ButtonsState {\r\n  includedButtons?: string[];\r\n  excludedButtons?: string[];\r\n  userButtons?: string[];\r\n  selectedButtons?: string[];\r\n  expanded?: boolean;\r\n  shownCount?: number;\r\n  moreIcon?: any;\r\n  lessIcon?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'share-buttons',\r\n  template: `<div *ngIf=\"state$ | async; let state\" class=\"sb-group sb-{{theme}}\">\r\n\r\n  <share-button *ngFor=\"let button of state.selectedButtons\"\r\n                [button]=\"button\"\r\n                [theme]=\"theme\"\r\n                [url]=\"url\"\r\n                [title]=\"title\"\r\n                [description]=\"description\"\r\n                [image]=\"image\"\r\n                [tags]=\"tags\"\r\n                [autoSetMeta]=\"autoSetMeta\"\r\n                [showCount]=\"showCount\"\r\n                [showIcon]=\"showIcon\"\r\n                [showText]=\"showText\"\r\n                [size]=\"size\"\r\n                (opened)=\"opened.emit($event)\"\r\n                (closed)=\"closed.emit($event)\"\r\n                (count)=\"count.emit($event)\"></share-button>\r\n\r\n  <div class=\"sb-button sb-{{theme}}\">\r\n\r\n    <expand-button *ngIf=\"state.shownCount < state.userButtons.length\"\r\n                   [expanded]=\"state.expanded\"\r\n                   [moreIcon]=\"state.moreIcon\"\r\n                   [lessIcon]=\"state.lessIcon\"\r\n                   [size]=\"(1 + size/20) * 14\"\r\n                   (toggle)=\"updateState({expanded: $event})\">\r\n    </expand-button>\r\n\r\n  </div>\r\n</div>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ShareButtonsComponent implements OnInit, OnDestroy {\r\n\r\n  state$: Observable<ButtonsState>;\r\n  private _stateWorker$ = new BehaviorSubject<ButtonsState>({\r\n    includedButtons: [],\r\n    excludedButtons: [],\r\n    userButtons: [],\r\n    selectedButtons: [],\r\n    expanded: true,\r\n    shownCount: Object.keys(this._share.config.prop).length\r\n  });\r\n\r\n  private _configSub$: Subscription;\r\n\r\n  @Input() theme = this._share.theme;\r\n\r\n  @Input('include') set includedButtons(includedButtons: string[]) {\r\n    this.updateState({includedButtons});\r\n  }\r\n\r\n  @Input('exclude') set excludedButtons(excludedButtons: string[]) {\r\n    this.updateState({excludedButtons});\r\n  }\r\n\r\n  @Input('show') set shownButtons(shownCount: number) {\r\n    this.updateState({shownCount});\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() url: string;\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Set meta tags from document head, useful when SEO is supported */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show buttons icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show buttons name */\r\n  @Input() showText = false;\r\n\r\n  /** Show buttons share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Buttons size */\r\n  @Input() size = 0;\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  constructor(private _share: ShareButtons) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state$ = this._stateWorker$.pipe(\r\n      map((state: ButtonsState) => {\r\n        // Use component include buttons, otherwise fallback to global include buttons\r\n        const includedButtons = state.includedButtons.length ? state.includedButtons : state.userButtons;\r\n        const userButtons = includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0);\r\n        const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\r\n        return {\r\n          userButtons,\r\n          selectedButtons,\r\n          expanded: state.expanded,\r\n          shownCount: state.shownCount,\r\n          moreIcon: state.moreIcon,\r\n          lessIcon: state.lessIcon\r\n        };\r\n      })\r\n    );\r\n\r\n    /** Subscribe to share buttons config changes, This updates the component whenever a new button is added */\r\n    this._configSub$ = this._share.config$.subscribe((config: ShareButtonsConfig) => {\r\n      // Use global include buttons, otherwise fallback to all buttons\r\n      const includedButtons = config.options.include.length ? config.options.include : Object.keys(config.prop);\r\n      const userButtons = includedButtons.filter((btn) => config.options.exclude.indexOf(btn) < 0);\r\n      this.updateState({\r\n        userButtons,\r\n        expanded: false,\r\n        moreIcon: config.options.moreButtonIcon,\r\n        lessIcon: config.options.lessButtonIcon\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._configSub$) {\r\n      this._configSub$.unsubscribe();\r\n    }\r\n    this._stateWorker$.complete();\r\n  }\r\n\r\n  updateState(state: ButtonsState) {\r\n    this._stateWorker$.next({...this._stateWorker$.getValue(), ...state});\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Explanation of the above code:\r\n * ------------------------------\r\n Include buttons: includes only wanted buttons and excludes the rest\r\n Exclude buttons: excludes only the unwanted buttons\r\n User buttons = Include buttons - exclude buttons\r\n Selected Buttons = User buttons [shown number]\r\n\r\n =====================================================================================\r\n\r\n Why do we use both include and exclude inputs?\r\n\r\n Because it is easier for users who want to disable one button to use [exclude] input instead of writing an array of all included buttons\r\n And it is easier for users who want to enable only one button to use [include] input instead of writing an array of all excluded buttons\r\n */\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'expand-button',\r\n  template: `\r\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\r\n            [style.fontSize.px]=\"size\"\r\n            (click)=\"toggle.emit(!expanded)\">\r\n\r\n      <div class=\"sb-inner\">\r\n        <div class=\"sb-content\">\r\n          <div class=\"sb-icon\">\r\n            <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ExpandButtonComponent {\r\n\r\n  @Input() moreIcon: any;\r\n  @Input() lessIcon: any;\r\n  @Input() expanded: string;\r\n  @Input() size: number;\r\n  @Output() toggle = new EventEmitter();\r\n\r\n  constructor(el: ElementRef) {\r\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\nimport { ShareButtonModule } from '@ngx-share/button';\r\n\r\nimport { ShareButtonsComponent } from './share-buttons.component';\r\nimport { ExpandButtonComponent } from './expand-button.component';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonsComponent,\r\n    ExpandButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareButtonModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareButtonModule,\r\n    ShareButtonsComponent\r\n  ]\r\n})\r\nexport class ShareButtonsModule {\r\n  static forRoot(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonsModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}